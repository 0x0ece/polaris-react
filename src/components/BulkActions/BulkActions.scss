@import '../../styles/common';

$resource-list-variables: (
  breakpoint-small: 458px,
  header-min-height: rem(56px),
  header-padding-small: rem(12px),
  header-vertical-padding: rem(10px),
  button-min-height: control-height(),
  header-content-min-height: control-height(),
  content-wrapper-stacking-order: 1,
  bulk-actions-wrapper-stacking-order: 2,
  header-outer-wrapper-stacking-order: 2,
  header-overlay-stacking-order: 4,
  spinner-stacking-order: 3,
  overlay-stacking-order: 2,
  list-stacking-order: 1,
  overlay-background: var(--p-overlay, rgba(color('white'), 0.5)),
);

@function resource-list($variable) {
  @return map-get($resource-list-variables, $variable);
}

$bulk-actions-button-stacking-order: (
  focused: 20,
);
$bulk-actions-offset-slide-in-start: rem(-40px);

.Group {
  @include text-style-input;
  width: 100%;
  will-change: opacity, display;
  transition: opacity easing() duration();
  display: none;
  align-items: center;
  flex-wrap: wrap;
  opacity: 0;

  &.Group-measuring {
    transition: none;
    display: flex;
    opacity: 0;
  }
}

.Group-entering,
.Group-exiting {
  opacity: 0;
  display: flex;
}

.Group-entered {
  opacity: 1;
  display: flex;
}

.Group-exited {
  opacity: 0;
  display: none;
}

.Group-smallScreen {
  @include breakpoint-after(resource-list(breakpoint-small)) {
    display: none;
  }
}

.Group-largeScreen {
  display: none;

  @include breakpoint-after(resource-list(breakpoint-small)) {
    display: flex;

    &.Group-exiting {
      transition: none;
    }

    &.Group-exited {
      opacity: 0;
      display: none;
    }
  }
}

.ButtonGroupWrapper {
  width: 100%;
  max-width: 100%;

  // We need the first item of button group on small screen to fill the space
  @include breakpoint-before(resource-list(breakpoint-small)) {
    // stylelint-disable-next-line selector-max-specificity, selector-max-class, selector-max-combinators, selector-max-type
    > div > div:first-child {
      flex: 1 1 auto;
    }
  }

  @include breakpoint-after(resource-list(breakpoint-small)) {
    width: auto;
    justify-content: flex-start;
    margin-right: spacing(tight);
  }

  .Group-measuring & {
    position: absolute;
    width: auto;
  }
}

.BulkActionButton {
  white-space: nowrap;
}

.CheckableContainer {
  flex: 1 1 0;
}

.disabled {
  @include base-button-disabled;
  cursor: default;
  pointer-events: none;
}

.PaginatedSelectAll {
  padding: spacing(extra-tight) 0;
}

.Slide {
  will-change: transform;
  transform: translateY(0);
  transition: transform easing() duration();
}

.Slide-appear,
.Slide-enter,
.Slide-exit {
  transform: translateX($bulk-actions-offset-slide-in-start);
}

.Slide-appearing,
.Slide-entering {
  transform: translateY(0);
}

.hidden {
  position: absolute;
  top: 0;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 100%;
  flex-shrink: 0;
  display: flex;
  visibility: hidden;
}
